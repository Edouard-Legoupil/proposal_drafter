name: Deploy to Azure App Service

on:
  push:
    branches:
      - main

env:
  IMAGE_TAG: ${{ github.sha }}
  REGISTRY_LOGIN_SERVER: ${{ secrets.REGISTRY_LOGIN_SERVER }}
  AZURE_WEBAPP_NAME: ${{ secrets.AZURE_WEBAPP_NAME }}

  # Backend environment variables
  AZURE_OPENAI_ENDPOINT: ${{ secrets.AZURE_OPENAI_ENDPOINT }}
  AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
  OPENAI_API_VERSION: ${{ secrets.OPENAI_API_VERSION }}
  AZURE_DEPLOYMENT_NAME: ${{ secrets.AZURE_DEPLOYMENT_NAME }}
  DB_USERNAME: ${{ secrets.DB_USERNAME }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_NAME: ${{ secrets.DB_NAME }}
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_PORT: ${{ secrets.DB_PORT }}
  SECRET_KEY: ${{ secrets.SECRET_KEY }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}


      - name: Debug ACR Access
        run: |
          echo "ACR Host: ${{ secrets.REGISTRY_LOGIN_SERVER }}"
          echo "DNS Lookup:"
          nslookup ${{ secrets.REGISTRY_LOGIN_SERVER }}
          echo "HTTPS Test:"
          curl -m 5 -vk https://${{ secrets.REGISTRY_LOGIN_SERVER }}/v2/ || echo "Curl failed"
          echo "Docker Login Test:"
          docker login ${{ secrets.REGISTRY_LOGIN_SERVER }} \
            -u ${{ secrets.REGISTRY_USERNAME }} \
            -p ${{ secrets.REGISTRY_PASSWORD }}      
        
      - name: Build and Push Images
        run: |
          docker compose -f azure-docker-compose.yml build
          docker compose -f azure-docker-compose.yml push

      - name: Deploy to Azure Web App (Multi-Container)
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          images: |
            ${{ env.REGISTRY_LOGIN_SERVER }}/proposalgen-frontend:${{ env.IMAGE_TAG }}
            ${{ env.REGISTRY_LOGIN_SERVER }}/proposalgen-backend:${{ env.IMAGE_TAG }}
          configuration-file: azure-docker-compose.yml